name: Build and Deploy to Azure Web App - Production

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build production assets
        run: |
          # Use the build script defined in package.json, which includes cross-env
          npm run build
          rm -rf node_modules
          # Install only production dependencies after build
          npm ci --omit=dev

      - name: Verify critical files
        run: |
          [ -f build/index.html ] || (echo "Missing build files" && exit 1)
          [ -f package.json ] || (echo "Missing package.json" && exit 1)
          [ -f server.js ] || (echo "Missing server.js" && exit 1)

      - name: Create deployment package
        run: |
          zip -r release.zip . -x "*.git*" "*.github*" "node_modules/dev/**"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: node-app
          path: .

      - name: Verify package exists
        run: |
          if [ ! -f release.zip ]; then
            echo "Error: release.zip not found!"
            exit 1
          fi

      - name: Deploy to Production
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'masterspizzawebapp'
          package: release.zip
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_PRODUCTION }}
        env:
          PORT: 8080
          WEBSITES_PORT: 8080
          NODE_ENV: production
